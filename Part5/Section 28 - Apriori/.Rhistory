setwd("~/Documentos/UDEMY/ML A-Z/Part5/Section 28 - Apriori")
#Importar Dataset
df=read.csv('Market_Basket_Optimisation.csv')
View(df)
View(df)
#Importar Dataset
df=read.csv('Market_Basket_Optimisation.csv',header = FALSE)
View(df)
View(df)
install.packages("arules")
#Importar Dataset
library(arules)
df=read.csv('Market_Basket_Optimisation.csv',header = FALSE)
df=read.csv('Market_Basket_Optimisation.csv',header = FALSE)
df=read.transactions("Market_Basket_Optimisation.csv",
sep = ",",
rm.duplicates = TRUE)
summary(df)
# Histograma de Transacciones
itemFrequencyPlot(dataset,topN=100)
# Histograma de Transacciones
itemFrequencyPlot(df,topN=100)
# Histograma de Transacciones
itemFrequencyPlot(df,topN=20)
3*7/7500
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.8))
View(rules)
View(rules)
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.3))
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.6))
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.7))
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.65))
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.4))
#Visualizacion de los resultados
inspect(rules[1:10])
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.01,confidence=0.4))
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.4))
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.65))
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
#Visualizacion de los resultados
inspect(sort(rules, by='lift'))
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.4))
#Visualizacion de los resultados
inspect(sort(rules, by='lift'))
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.5))
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.003,confidence=0.2))
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
#Entrenar Algoritmo con el Dataset
rules=apriori(data = df, parameter = list(support=0.004,confidence=0.2))
#Visualizacion de los resultados
inspect(sort(rules, by='lift')[1:10])
